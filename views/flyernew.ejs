<% layout('layout') -%>


<script src="/jquery-ui/js/file_upload.js"></script>
<script src="/flyer.js"></script>
<script>
    var portletCounter = 0;
    var flyer;
    var flyerid;
    var portletStackID;

    $(function() {
        flyer = new Flyer(true);

        flyerid = $('input[name=flyerid]').val();
        portletStackID = 'portletStack';

        flyer.initPortlet( $('#' + portletStackID) );
        flyer.loadLastFlyer( flyerid, portletStackID );

        $( ".column" ).sortable({
            connectWith: ".column"
        }).disableSelection();

        $(".newitem").click(function(e){
            var itemType = $(this).attr('type');
            var itemID = portletCounter++;
            var portletType = flyer.portletTypeString2Type(itemType);

            flyer.createPortlet( portletType, itemID, null, portletStackID );
        });

        var previewWindow = 0;

        $('#buttonPreview').click( function() {

            var flyerid = $('input[name=flyerid').val();

            if( previewWindow==0 )
                previewWindow = window.open('/flyer/' + flyerid);
            else
                previewWindow.location = '/flyer/' + flyerid;
        })

        $('#buttonSave').click(function(){
            var flyerjson = flyer.flyer2json('portletStack');

            $('#buttonSave').text('Saving...').addClass('disabled');

            $.post( '/flyer/new', {flyer:flyerjson} )
                    .done(function(data){
                        $('#buttonSave').text('Save').removeClass('disabled');
                    })
                    .fail(function(data){
                        $('#buttonSave').text('Save*').removeClass('disabled');
                    });

            console.log( flyer );
        });

        $('#buttonCreate').click(function(){
            $('#buttonSave').click();
        });
    });
</script>

<link rel="stylesheet" href="/gridster/jquery.gridster.min.css">
<script src="/gridster/jquery.gridster.min.js"></script>
<script>
var isDraggingSpliter = false;
var isDraggingSelection = false;
var dragingSpliter;
var selectedRegion = {from:{},to:{}};
var cellsState = [];
var cellGroups = [];

$(function(){ //DOM Ready

    var initCellStates = function() {

        for(var r=0; r<4; r++) {
            cellsState[r] = [];
            for(var c=0; c<3; c++){
                var content = $('.fsheet')
                        .find('.fcolumn').eq(c)
                        .find('.frow').eq(r)
                        .find('.fcontent').first();

                content.attr('rown',r);
                content.attr('coln',c);

                cellsState[r][c] = {
                    r:1,
                    l:1,
                    t:1,
                    b:1,
                    content: content
                };

                // At first each cell is a group
                cellGroups.push( [ {row:r,column:c} ] );
            }
        }

        // Select the merged cells all together
        $('.fsheet .fcolumn .frow .fcontent').mouseenter(function(e){

            var r = $(this).attr('rown');
            var c = $(this).attr('coln');
            var groupIndex = findGroupOfCell(r,c);

            cellGroups[groupIndex].forEach(function(cell){
                cellsState[cell.row][cell.column].content.addClass('highlighted');
            })

        });

        // Unselect the merged cells all together
        $('.fsheet .fcolumn .frow .fcontent').mouseleave(function(e){
            var r = $(this).attr('rown');
            var c = $(this).attr('coln');
            var groupIndex = findGroupOfCell(r,c);

            cellGroups[groupIndex].forEach(function(cell){
                cellsState[cell.row][cell.column].content.removeClass('highlighted');
            })
        });

        $('.fsheet .fcolumn .frow .fcontent').dblclick(function(e){

            // Open OnFly ToolBox
            var r = $(this).attr('rown');
            var c = $(this).attr('coln');
            var gIdx = findGroupOfCell(r,c);

            var w = parseInt( $('#onFlyToolbox').css('width') );
            var h = parseInt( $('#onFlyToolbox').css('height') );

            $('#onFlyToolbox')
                    .css('top',e.pageY - h/2)
                    .css('left',e.pageX - w/2)
                    .removeClass('hidden')
                    .attr('gidx',gIdx)
                    .mouseleave(function(e){
                        $(this).addClass('hidden');
                    });

            console.log(gIdx);
        });
    }

    var updateSheet = function() {
        var sheetWidth = parseInt( $('.fsheet').css('width') );
        $('.fsheet').css('height', sheetWidth*0.75);

        // Remove border between the cells in same groups
        for(var c=0; c<3; c++){
            for(var r=0; r<4; r++){
                var cell = cellsState[r][c];
                var gIdx = findGroupOfCell(r,c);

                // Remove Inside Borders
                cell.r = (gIdx!=findGroupOfCell(r,c+1))? 1 : 0 ;
                cell.l = (gIdx!=findGroupOfCell(r,c-1))? 1 : 0 ;
                cell.t = (gIdx!=findGroupOfCell(r-1,c))? 1 : 0 ;
                cell.b = (gIdx!=findGroupOfCell(r+1,c))? 1 : 0 ;

                var borders = {
                    'border-left-style':(cell.l==1?'dotted':'none'),
                    'border-right-style':(cell.r==1?'dotted':'none'),
                    'border-top-style':(cell.t==1?'dotted':'none'),
                    'border-bottom-style':(cell.b==1?'dotted':'none')
                }

                cell.content.css(borders);
            }
        }
    }

    var findGroupOfCell = function(row, column){

        var result = -1;

        cellGroups.forEach(function(group){
            group.forEach(function(cell) {
                if( cell.row == row && cell.column == column )
                    result = cellGroups.indexOf(group);
            });
        });

        return result;
    }

    var mergeCells = function(from,to){

        var sc = Math.min(from.column, to.column);
        var sr = Math.min(from.row, to.row);
        var ec = Math.max(from.column, to.column);
        var er = Math.max(from.row, to.row);
        var mergedGroup = [];

        // Put the merged cells in same group

        for(var c=sc; c<=ec; c++){
            for(var r=sr; r<=er; r++){

                var foundGroupIndex = findGroupOfCell(r,c);
                if( foundGroupIndex != -1 ){
                    Array.prototype.push.apply( mergedGroup, cellGroups[foundGroupIndex] );
                    cellGroups.splice( foundGroupIndex, 1 );
                }
            }
        }

        cellGroups.push(mergedGroup);
    }


    initCellStates();
    updateSheet();

    $(window).resize( function(e) {
        updateSheet();
    });

    $(document).mouseup( function(e){
        $(this).unbind('mousemove');

        if(isDraggingSelection){

            $('.fsheet .fcontent').removeClass('highlighted');

            if( selectedRegion.from.row && selectedRegion.to.row){
                mergeCells(selectedRegion.from,selectedRegion.to);
                selectedRegion = {from:{},to:{}};

                updateSheet();
            }
        }

        isDraggingSpliter = false;
        isDraggingSelection = false;
    });

    $('.fspliter').mousedown(function(e){
        e.preventDefault();

        isDraggingSpliter = true;
        dragingSpliter = $(this);
        $(this).attr('lastX', e.pageX);

        $(document).mousemove(mouseMoveDragingSpliter);
    });

    $('.fcontent').mousemove(function(e){
        if( isDraggingSelection ){
            selectedRegion.to.row = $(this).attr('rown');
            selectedRegion.to.column = $(this).attr('coln');

            // Highlight selected region
            var sc = Math.min(selectedRegion.from.column, selectedRegion.to.column);
            var sr = Math.min(selectedRegion.from.row, selectedRegion.to.row);
            var ec = Math.max(selectedRegion.from.column, selectedRegion.to.column);
            var er = Math.max(selectedRegion.from.row, selectedRegion.to.row);

            for(var c=sc; c<=ec; c++)
                for(var r=sr; r<=er; r++)
                    cellsState[r][c].content.addClass('highlighted');
        }
    });

    $('.fcontent').mousedown(function(e){
        e.preventDefault();

        isDraggingSelection = true;

        selectedRegion.from.row = $(this).attr('rown');
        selectedRegion.from.column = $(this).attr('coln');
    });

    var mouseMoveDragingSpliter = function(e){

        if( isDraggingSpliter ){
            var col1Width = parseInt( dragingSpliter.prev().css('width') );
            var col2Width = parseInt( dragingSpliter.next().css('width') );
            var spliterX = dragingSpliter.attr('lastX');

            var offset = e.pageX - spliterX;
            var newCol1Width = col1Width + offset;
            var newCol2Width = col2Width - offset
            var totalWidth = parseInt( $('.fsheet').css('width') );
            var col1WidthPercent = (100*newCol1Width/totalWidth);
            var col2WidthPercent = (100*newCol2Width/totalWidth);

            dragingSpliter.prev().css('width',col1WidthPercent + '%');
            dragingSpliter.next().css('width',col2WidthPercent + '%');

            dragingSpliter.attr('lastX', e.pageX);
        }
    }

    $(".newitem").click(function(e){
        var gIdx = $('#onFlyToolbox').attr('gidx');

        // Find Group Region Borders
        var minr = cellGroups[gIdx][0].row;
        var maxr = cellGroups[gIdx][0].row;;
        var minc = cellGroups[gIdx][0].column;
        var maxc = cellGroups[gIdx][0].column;

        cellGroups[gIdx].forEach(function(cell){
            minr = Math.min(cell.row, minr);
            maxr = Math.max(cell.row, maxr);
            minc = Math.min(cell.column, minc);
            maxc = Math.max(cell.column, maxc);
        });

        var splitterWidth = parseInt( $('.fspliter').css('width') );

        var top = 0;
        for( var r=0; r<minr; r++)
            top += parseInt( $('.fsheet .fcontent[rown='+r+'][coln='+minc+']').css('height') );

        var left = 0;
        for( var c=0; c<minc; c++)
            left += parseInt( $('.fsheet .fcontent[rown='+minr+'][coln='+c+']').css('width') );

        left += splitterWidth*minc; // Offset for Splitter (2px)

        var height = 0;
        for( var r=minr; r<=maxr; r++)
            height += parseInt( $('.fsheet .fcontent[rown='+r+'][coln='+minc+']').css('height') );

        var width = 0;
        for( var c=minc; c<=maxc; c++)
            width += parseInt( $('.fsheet .fcontent[rown='+minr+'][coln='+c+']').css('width') );

        width += splitterWidth*maxc; // Offset for Splitter

        $('<div></div>')
                .css('top',top)
                .css('left',left)
                .css('width',width)
                .css('height',height)
                .css('position','absolute')
                .css('background-color','#515151')
                .appendTo('.fsheet');
    });
});
</script>

<style>
    .newitem {
        margin: 5px;
    }

    .gridster li {
        background-color: #555;
    }

    .fsheet {
        font-size: 0; /* for removing space between inline-block elements! */
        /*border: 3px dashed #888;*/
        height: 400px;
        position: relative;
    }

    .fcolumn {
        display: inline-block;
        vertical-align: top;
        width: 30%;
        font-size: 16px;
        height: 100%;
    }

    .fspliter {
        display: inline-block;
        vertical-align: top;
        width: 2px;
        height: 105%;
    }

    .fspliter:hover {
        cursor: ew-resize;
        background-color: #ddd;
    }

    .frow {
        height: 25%;
    }

    .frow .fcontent {
        border: 1px dotted #000;
        height: 100%;
    }

    .frow .fcontent:hover {
        background-color: #fff4af;
    }

    .frow .fcontent > div {
        display: none;
        margin: 5%;
        height: 100%;
        text-align: center;
    }

    .frow .fcontent:hover > div {
        display: block;
    }

    .highlighted {
        background-color: #fff4af;
    }

    #onFlyToolbox {
        position: absolute;
        border: 1px solid black;
        padding: 10px;
        background-color: rgba(250, 191, 191, 0.93);
        width: 120px;
    }

    #onFlyToolbox .container-fluid {
        margin: 0;
        padding: 0;
    }
</style>

<div class="container-fluid" style="width: 95%;">
    <div class="row-fluid">
        <div class="span5">
            <a class="btn btn-warning" href="#">1-Chooice Template</a>
            <a class="btn btn-success disabled" href="#">2-Edit Flyer</a>
            <a class="btn btn-primary" href="/flyerPublish">3-Publish Flyer</a>
        </div>
    </div>
    <div class="row-fluid"><h4>Creating New Flyer</h4></div>
    <div class="row-fluid hide">
        <div>
            <div class="gridster">
                <ul>
                    <li data-row="1" data-col="1" data-sizex="1" data-sizey="1"></li>
                    <li data-row="2" data-col="1" data-sizex="1" data-sizey="1"></li>
                    <li data-row="3" data-col="1" data-sizex="1" data-sizey="1"></li>

                    <li data-row="1" data-col="2" data-sizex="2" data-sizey="1"></li>
                    <li data-row="2" data-col="2" data-sizex="2" data-sizey="2"></li>

                    <li data-row="1" data-col="4" data-sizex="1" data-sizey="1"></li>
                    <li data-row="2" data-col="4" data-sizex="2" data-sizey="1"></li>
                    <li data-row="3" data-col="4" data-sizex="1" data-sizey="1"></li>

                    <li data-row="1" data-col="5" data-sizex="1" data-sizey="1"></li>
                    <li data-row="3" data-col="5" data-sizex="1" data-sizey="1"></li>

                    <li data-row="1" data-col="6" data-sizex="1" data-sizey="1"></li>
                    <li data-row="2" data-col="6" data-sizex="1" data-sizey="2"></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span8">
            <div class="fsheet">
                <div class="fcolumn">
                    <div class="frow">
                        <div class="fcontent">
                        </div>
                    </div>
                    <div class="frow">
                        <div class="fcontent">
                        </div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                </div>
                <div class="fspliter">
                    <div class="frow"></div>
                    <div class="frow"></div>
                    <div class="frow"></div>
                    <div class="frow"></div>
                </div>
                <div class="fcolumn">
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                </div>
                <div class="fspliter">
                    <div class="frow"></div>
                    <div class="frow"></div>
                    <div class="frow"></div>
                    <div class="frow"></div>
                </div>
                <div class="fcolumn">
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                    <div class="frow">
                        <div class="fcontent"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid" hidden>
        <div class="span3"  style="background-color: #e8eec2;">
            <form method="post" action="/flyer/new" class="form-actions" style="margin: 0 auto">
                <fieldset>
                    <div class="control-group">
                        <legend>
                            Settings
                        </legend>
                        <div class="controls">
                            <input type="hidden" name="flyerid" value="<%=flyerid%>"/>
                            <input type="text" name="flyertext" placeholder="Enter Flyer Description"/>
                            <span class="help-block">Select Template</span>
                            <select name="templates" class="form-control">
                                <option value='template01'>Landscape</option>
                                <option value='template02'>Portrait</option>
                            </select>
                        </div>
                    </div>
                    <div class="control-group">
                        <legend>
                            Publish
                        </legend>
                        <div class="controls">
                            <span class="help-block">Select First Board For Putting Up</span>
                            <select name="board" class="form-control">
                                <% for(i=0;i<boards.length;i++){%>
                                <option value=<%=boards[i]._id%>><%=boards[i].name%></option>
                                <%}%>
                            </select>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" id="buttonCreate">Create</button>
                    <button type="button" class="btn btn-success" id="buttonSave">Save</button>
                    <button type="button" class="btn btn-warning" id="buttonPreview">Preview</button>
                </fieldset>
            </form>
        </div>
        <div class="span8">
            <div class="column" id="portletStack">
                <div class="portlet" id="portletCreator">
                    <div class="portlet-header">New Item</div>
                    <div class="portlet-content">
                        <div class="row-fluid text-center">
                            <div class="span1 newitem" type="picture"><i class="icon-picture"></i></div>
                            <div class="span1 newitem" type="text"><i class="icon-font"></i></div>
                            <div class="span1 newitem" type="video"><i class="icon-facetime-video"></i></div>
                            <div class="span1 newitem" type="button"><i class="icon-globe"></i></div>
                            <div class="span1 newitem" type="tag"><i class="icon-tag"></i></div>
                            <div class="span1 newitem" type="map"><i class="icon-map-marker"></i></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="span1"  style="background-color: #e8eec2;box-shadow: 2px 2px 2px #555555;">
            <div class="container-fluid" style="padding: 0 20px;">
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="picture"><i class="icon-picture"></i></div>
                </div>
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="text"><i class="icon-font"></i></div>
                </div>
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="video"><i class="icon-facetime-video"></i></div>
                </div>
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="button"><i class="icon-globe"></i></div>
                </div>
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="tag"><i class="icon-tag"></i></div>
                </div>
                <div class="row-fluid text-center">
                    <div class="span12 newitem" type="map"><i class="icon-map-marker"></i></div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
</div>
</div>

<div class="content-fluid hidden text-center" id="onFlyToolbox">
    <div class="row-fluid">
        <div class="span3 newitem" type="picture"><i class="icon-picture"></i></div>
        <div class="span3 newitem" type="text"><i class="icon-font"></i></div>
        <div class="span3 newitem" type="video"><i class="icon-facetime-video"></i></div>

    </div>
    <div class="row-fluid">
        <div class="span3 newitem" type="button"><i class="icon-globe"></i></div>
        <div class="span3 newitem" type="tag"><i class="icon-tag"></i></div>
        <div class="span3 newitem" type="map"><i class="icon-map-marker"></i></div>
    </div>
</div>
