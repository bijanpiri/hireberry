<% layout('layout.ejs') %>

<script type="text/javascript" src="http://www.google.com/jsapi"></script>
<script type="text/javascript" src="http://almende.github.io/chap-links-library/js/timeline/timeline.js"></script>
<link rel="stylesheet" type="text/css" href="http://almende.github.io/chap-links-library/js/timeline/timeline.css">


<script src="/script/jquery.watable.js" type="text/javascript" charset="utf-8"></script>
<link rel='stylesheet' href='/css/watable.css'/>
<link rel='stylesheet' href='/css/dashboard.css'>
<link rel='stylesheet' href='/css/job.css'>
â€‹
<!--<link rel='stylesheet' href='/clndr/clndr.css'>-->
<link rel='stylesheet/less' href='/clndr/clndr.less'>

<script src="/clndr/less.js" type="text/javascript"></script>
<script src="http://kylestetz.github.io/CLNDR/js/underscore.js" type="text/javascript"></script>
<script src="/clndr/moment.js" type="text/javascript"></script>
<script src="/clndr/clndr.js" type="text/javascript"></script>


<script>
var teamID = '<%=teamID%>';
var userID = '<%=userID%>';
var teamMembers = [];
var forms = [];

google.load("visualization", "1");

$(function(){

    _.templateSettings = {
        interpolate: /\{\{(.+?)\}\}/g,
        escape: /\{\{\-(.+?)\}\}/g,
        evaluate: /\{\%(.+?)\%\}/g
    };

    $('#full-clndr').clndr({
        template: $('#full-clndr-template').html(),
        events:  [
            { date: '2014-04-01', title: 'Persian Kitten Auction', location: 'Center for Beautiful Cats' },
            { date: '2014-04-19', title: 'Cat Frisbee', location: 'Jefferson Park' },
            { date: '2014-04-08', title: 'Kitten Demonstration', location: 'Center for Beautiful Cats' },
            { date: '2014-04-02', title: 'Small Cat Photo Session', location: 'Center for Cat Photography' }
        ],
        clickEvents: {
            click: function(target) {
                console.log(target);
            },
            onMonthChange: function(month) {
                console.log('you just went to ' + month.format('MMMM, YYYY'));
            }
        },
        doneRendering: function() {
            console.log('this would be a fine place to attach custom event handlers.');
        }
    });


    refresh(false);

    $('#applicationPreview').dialog({
        resizable: false,
        autoOpen: false,
        modal: true,
        title: "Application Preview",
        width: 400,
        height: 600
    });

    $('#activitiesModal').dialog({
        resizable: false,
        autoOpen: false,
        modal: true,
        title: "Activities",
        width: 800,
        height: 450
    });

    $('#positionComments').dialog({
        resizable: false,
        autoOpen: false,
        modal: true,
        title: "Activities",
        width: 400,
        height: 600
    });

    $('#teamNameChange').click( function() {
        var newName = prompt('Enter new name:');
        $.post('/api/team/name',{newName:newName}).done( function() {
            $('#teamName').text(newName);
        });
    });

    $('#teamAdminChange').click( function() {
        $('.teamMemberMakeAdmin').show();
    });


    $('.menu .item').click( function(e) {
        var sectionContainerClass = '.' + $(e.target).attr('forContainer');
        $('.sectionContainer').hide();
        $(sectionContainerClass).show();
        $('.menu .item').removeClass('item-selected');
        $(e.target).addClass('item-selected');
    })
});

function refresh(once) {
    // First fill Forms list, then fill table according to current selected form
    fillPositionsList( function() {
        getTeamInfo( function() {
            $('.colAssignedTo select option').remove();

            for( var i=0; i<teamMembers.length; i++ ){
                if( teamMembers[i].status === 'joint') {
                    var option = $('<option>')
                            .attr('userID',teamMembers[i]._id)
                            .text(teamMembers[i].displayName);
                    $('.colAssignedTo select').append( option.clone() );
                }
            }

        });
    });
    fillTable()
    getStat();
    getInvitatinos();
    fillAskedForComments();

    if(once==false)
        setTimeout( refresh, 30000 );
}

function fillAskedForComments() {

    $('#askedForCommentList').html('');

    $.get('/api/user/application/askedForComment').done( function(resApp){

        $.get('/api/user/form/askedForComment').done( function(resForm){

            $.get('/api/user/invitations').done( function(resInvitations){

                var A4C_applicatinos = resApp.applications;
                var A4C_forms = resForm.forms;

                var badgeNum = resApp.applications.length + resForm.forms.length + resInvitations.length;
                $('#comments_badge').text(badgeNum);

                showApplications(A4C_applicatinos);
                showForms(A4C_forms);
                showInvitations(resInvitations);
            });
        });
    })

    function decreaseBudgeNumber() {
        var num = parseInt( $('#comments_badge').text() );
        $('#comments_badge').text(--num);
    }

    function showApplications(A4C_applicatinos) {
        A4C_applicatinos.forEach( function(a4c) {
            var objID = 'askedForComment_'+a4c._id;

            var dateObj = $('<div>')
                    .text( 'At ' + (new Date(a4c.askingTime)).toLocaleString() )
                    .addClass('comment_date');

            var titleObj = $('<div>')
                    .text('You are asked to put your comment about ')
                    .append( $('<a>').attr('applicationID',a4c.applicationID._id).text('this application').click( function() {
                        showApplicationPreview( $(this).attr('applicationID') );
                    }))

            var textAreaObj = $('<textarea>')
                    .attr('id','comment_app_' + a4c.applicationID._id)
                    .css('display','block')
                    .attr('placeholder','Your comment ...');

            var sendBtnObj = $('<button>')
                    .text('Send')
                    .click( function() {
                        $.post('/api/user/comment', {
                            askForCommentID:a4c._id,
                            comment:$('#comment_app_' + a4c.applicationID._id).val()
                        }).done( function() {
                                    $('#' + objID).remove();
                                    decreaseBudgeNumber();
                                });
                    });

            $('#askedForCommentList').append( $('<li>').attr('id',objID)
                    .append(dateObj)
                    .append(titleObj)
                    .append(textAreaObj)
                    .append(sendBtnObj) );
        });
    }

    function showForms(A4C_forms) {
        A4C_forms.forEach( function(a4c) {
            var objID = 'askedForComment_'+a4c._id;

            var dateObj = $('<div>')
                    .text( 'At ' + (new Date(a4c.askingTime)).toLocaleString() )
                    .addClass('comment_date');

            var titleObj = $('<div>')
                    .text('You are asked to put your comment about ')
                    .append( $('<a>').attr('href', '/flyer/embeded/' + a4c.formID._id).text('this form') );

            var textAreaObj = $('<textarea>')
                    .attr('id','comment_form_' + a4c.formID._id)
                    .css('display','block')
                    .attr('placeholder','Your comment ...');

            var sendBtnObj = $('<button>')
                    .text('Send')
                    .click( function() {
                        $.post('/api/user/comment', {
                            askForCommentID:a4c._id,
                            comment:$('#comment_form_' + a4c.formID._id).val()
                        }).done( function() {
                                    $('#' + objID).remove();
                                    decreaseBudgeNumber();
                                });
                    });

            $('#askedForCommentList').append( $('<li>').attr('id',objID)
                    .append(dateObj)
                    .append(titleObj)
                    .append(textAreaObj)
                    .append(sendBtnObj) );
        });
    }

    function showInvitations(resInvitations) {
        for( var i=0; i<resInvitations.length; i++ ) {

            var teamID = resInvitations[i].inviterTeam._id;
            var invitationID = resInvitations[i]._id;
            var objID = 'invitation_' + invitationID;

            var dateObj = $('<div>')
                    .text( 'At ' + (new Date(resInvitations[i].inviteTime)).toLocaleString() )
                    .addClass('comment_date');

            var titleObj = $('<div>')
                    .text('Invited to ' +  resInvitations[i].inviterTeam.name);

            var acceptBtnObj = $('<a>').addClass('btn btn-success btn-mini')
                    .attr('invitationID',invitationID)
                    .text('Accept')
                    .click( function() {
                        $.post('/api/user/team/join',{
                            answer:'accept',
                            teamID:teamID,
                            invitationID: $(this).attr('invitationID')
                        }).done( function(res) {
                                    alert('You\'ve joint.');
                                    decreaseBudgeNumber();
                                    $('#'+objID).remove();
                                })
                    });

            var declineBtnObj = $('<a>').addClass('btn btn-danger btn-mini')
                    .attr('invitationID',invitationID)
                    .text('Decline')
                    .click( function() {
                        $.post('/api/user/team/join',{
                            answer:'decline',
                            teamID:teamID,
                            invitationID: $(this).attr('invitationID')
                        }).done( function(res) {
                                    $('#'+objID).remove();
                                    decreaseBudgeNumber();
                                })
                    });

            $('#askedForCommentList').append( $('<li>').attr('id','#'+objID)
                    .append(dateObj)
                    .append(titleObj)
                    .append(acceptBtnObj)
                    .append(declineBtnObj) );
        }
    }

    function showApplicationPreview(applicationID) {

        $('#applicationPreview').html('');

        $.get('/api/application/json/' + applicationID).done( function(app) {
            app = app[0];

            var workTime = app.workTime;
            var workPlace = app.workPlace;
            var profiles = app.profiles.length ? JSON.parse(app.profiles) : '';
            var coverLetter = app.anythingelse;
            var resumePath = app.resumePath;
            var name = app.name;
            var email = app.email;
            var skills = app.skills.length ? JSON.parse(app.skills) : '';

            var profielsArray = [];
            for( var profile in profiles )
                profielsArray += '<br>' + profile + ':' + profiles[profile];
            profiles = profielsArray;

            var workTimeObj = $('<div>').text('Work Time: ' + workTime);
            var workPlaceObj = $('<div>').text('Work Place: ' + workPlace);
            var profilesObj = $('<div>').html('Profiles: ' + profiles);
            var coverLetterObj = $('<div>').text('Cover Letter: ' + coverLetter);
            var resumePathObj = $('<div>').text('Resume Path: ' + resumePath);
            var nameObj = $('<div>').text('Name: ' + name);
            var emailObj = $('<div>').text('Email: ' + email);
            var skillsObj = $('<div>').text('Skills: ' + skills);


            var previewObj = $('<div>').addClass('applicationsPreview')
                    .append(nameObj)
                    .append(emailObj)
                    .append(workTimeObj)
                    .append(workPlaceObj)
                    .append(profilesObj)
                    .append(coverLetterObj)
                    .append(resumePathObj)
                    .append(skillsObj)


            $('#applicationPreview').append( previewObj )
        });


        $('#applicationPreview').dialog('open');
    }
}

function fillPositionsList( callback ) {

    $.get('/api/forms?teamID=' + teamID).done( function(res) {

        forms = res.forms;

        $('.positionsContainer .position').remove();

        res.forms.forEach( function(form) {
            var row = $('.positionsContainer .positionsHeaderRow')
                    .clone()
                    .removeClass('positionsHeaderRow');

            var titleObj = $('<span>')
                    .addClass('positionTitle')
                    .text(form.formName);

            var stateObj = $('<span>')
                    .addClass('positionMode')
                    .text(form.mode);

            var creatorObj = $('<span>')
                    .addClass('positionCreator')
                    .text( form.creator.displayName);

            var assigneeObj = $('<select>')
                    .attr('formID', form.formID)
                    .addClass('positionAssignee')
                    .text((form.autoAssignedTo ? form.autoAssignedTo.displayName : 'No One') )
                    .change( function(){
                        var userID = $(this).find(':selected').attr('userID');
                        var formID = $(this).attr('formID');

                        $.post('/api/team/form/assign',{formID:formID,userID:userID})
                                .done( function() {
                                    alert('Position assignment done.')
                                });
                    })

            var editBtnObj = $('<a>')
                    .addClass('btn btn-mini btn-primary')
                    .attr('href','')
                    .text('edit')
                    .click( function() {
                        window.open('/flyer/edit/0?flyerid=' + form.formID);
                    });

            var viewBtnObj = $('<a>')
                    .addClass('btn btn-mini btn-warning')
                    .attr('href','')
                    .text('view')
                    .click( function() {
                        window.open('/flyer/view/0?flyerid=' + form.formID);
                    });

            var deleteBtnObj = $('<a>')
                    .addClass('btn btn-mini btn-danger')
                    .attr('formID',form.formID)
                    .text('comments')
                    .click( function() {
                        //window.open('/flyer/remove?flyerid=' + form.formID);
                        $('#positionComments').dialog('open')
                        var formID = $(this).attr('formID')
                        getPositionComments( formID );
                    });

            row.find('.colTitle').html('').append(titleObj);
            row.find('.colStatus').html('').append(stateObj);
            row.find('.colCreator').html('').append(creatorObj);
            row.find('.colAssignedTo').html('').append(assigneeObj);
            row.find('.colOperations').html('').append(editBtnObj).append(viewBtnObj).append(deleteBtnObj);

            row.addClass('position').attr('id',form.formID);
            $('.positionsContainer').append( row );
        });

        callback();
    })
}

function fillTable() {

    $('#applicationsTable').html('');

    $('#applicationsTable').WATable({
        url: '/api/applications',
        preFill: true,
        pageSize: 10,
        sorting: true,
        filter: true,
        sortEmptyLast: true,
        hidePagerOnEmpty: true,
        checkboxes: true,
        actions: {
            filter: true, //Toggle visibility
            columnPicker: true, //Toggle visibility
            custom: [
                $('<a href="#">someLink</a>'),
                $('<a href="#">anotherLink</a>')
            ]
        },
        rowClicked: function(data) {
            rowClicked(data);
        }
    });
}

// Make a triple parameters function
function handlerMaker(a,b,c) {
    return (function(p1,p2,p3){
        return function(){changeApplicationState(p1,p2,p3)}
    })(a,b,c);
}

function changeApplicationState(appID,newState,inputElements) {

    var data = {};

    for(var i=0; i<inputElements.length; i++)
        data[ inputElements[i].attr('name') ] = inputElements[i].val();

    $.post( '/api/applications/' + appID, { activity:newState, data:data }).done( function(res) {
        fillTable();
    })
}

function Application(appID) {
    $.post( '/api/applications/' + appID, {
        activity:'INVITED'
    }).done( function(res) {
                fillTable();
            })
}

function getStat() {
    $.get('/api/applications/stat').done( function(res){
        $('#numForms').text( res.numForms )
        $('#numApplications').text( res.numApplications )
        $('#numNewApplications').text( res.numNewApplications )
        $('#numTodayApplications').text( res.numTodayApplications )
    });
}

function rowClicked(data) {

    var activitiesObj = $('<div>').addClass('activities');
    var appID = data.row._id;
    var activities = data.row.activities;
    var timelineRows = [];

    for( var i=0; i<activities.length; i++ ) {

        var activity = activities[i];
        var dateTime = new Date(activity['timestamp']);
        var activityItem = $('<div>').addClass('activity');
        var timeStamp = $('<div>').addClass('activity-timestamp').text( dateTime.toLocaleString() );
        var activityType = $('<div>').addClass('activity-type').text( activity['type'] );
        var separator = $('<hr>').addClass('activity-separator');
        var aboutDecision ='';

        if( i > 0 ) {
            var decisionTitle = $('<div>').append('Decision: ' +  activities[i-1]['type'] + ' &#10140; ' + activities[i]['type']);
            var decisionBody = $('<div>');

            var moreData = activities[i].data;
            for( var key in moreData)
                decisionBody.append('<b>' + key + '</b>' + ': ' + moreData[key] + '<br/>');

            aboutDecision = $('<div>')
                    .addClass('activity-decision')
                    .append(decisionTitle)
                    .append(decisionBody);
        }

        activityItem.append(timeStamp).append(activityType).append(aboutDecision)
        activitiesObj.prepend( activityItem );
        timelineRows.push([dateTime,, activity['type']]);
    }

    $('#activitiesModal').find('.contain').html( activitiesObj );
    $('#activitiesModal').dialog('open');

    // Showing timeline must be called just after removing hidden property
    loadTimeline(timelineRows);

    var lastActivity = data.row.activities[ data.row.activities.length-1 ];
    loadDecisionBox( lastActivity, appID );
    getApplicationComments( appID );

    // AskForComment section
    $('#askForCommentOnApplication').unbind('click');
    $('#askForCommentOnApplication').click( function() {
        $.post('/api/team/application/askForComment', {
            applicationID: appID,
            userID: $('#teamMembersForComment :selected').attr('id')
        }).done( function() {
                    $('#askForCommentMessage').text('Request is sent to ' + $('#teamMembersForComment :selected').text() );
                });
    });

    $('#teamMembersForAssign option').remove();
    $('#teamMembersForComment option').remove();

    for( var i=0; i<teamMembers.length; i++ ){
        if( teamMembers[i].status === 'joint' ) {
            var option = $('<option>')
                    .attr('name',teamMembers[i]._id)
                    .attr('id',teamMembers[i]._id)
                    .text(teamMembers[i].displayName);
            $('#teamMembersForAssign').append( option.clone() );
            $('#teamMembersForComment').append( option.clone() );
        }
    }
}

function loadDecisionBox(activity,applicationID) {

    $('#decisionBox').html('');

    var actionPanel = $('<div>').addClass('activity-actionPanel');
    var currentState = $('<p>').html('This application is in <b>' + activity['type'] + '</b> state.').addClass('activity-title');
    var title = $('<p>').text('Make a decision').addClass('activity-title');
    var note = $('<textarea>').attr('placeholder','Enter a note about your decision causes')
            .addClass('activity-note')
            .attr('name','note') ;
    actionPanel.append(currentState).append(title).append(note).append('<br>');

    switch( activity['type'] ) {
        case 'NEW':
            var ignoreBtn = $('<button>')
                    .text('Ignore')
                    .addClass('btn btn-danger')
                    .click( handlerMaker(applicationID,'IGNORED',[note]) );

            var planBtn = $('<button>')
                    .text('Plan an interview')
                    .addClass('btn btn-primary')
                    .click( handlerMaker(applicationID,'PLANNING',[note]) );

            actionPanel.append(ignoreBtn).append(planBtn);
            break;
        case 'PLANNING':
            var interviewDate = $('<input type=date>')
                    .attr('name','interviewDate');
            var interviewTime = $('<input type=time>')
                    .attr('name','interviewTime')

            var ignoreBtn = $('<button>')
                    .text('Ignore')
                    .addClass('btn btn-danger')
                    .click( handlerMaker(applicationID,'IGNORED',[note]) );

            var inviteBtn = $('<button>')
                    .text('Send an invitation')
                    .addClass('btn btn-primary')
                    .click( handlerMaker(applicationID,'INVITED',[note,interviewDate,interviewTime]) );

            actionPanel.append(interviewDate)
                    .append(interviewTime)
                    .append('<br>')
                    .append(ignoreBtn)
                    .append(inviteBtn);
            break;
        case 'INVITED':
            var ignoreBtn = $('<button>')
                    .text('Approved')
                    .addClass('btn btn-success')
                    .click( handlerMaker(applicationID,'APPROVED',[note]) );

            var inviteBtn = $('<button>')
                    .text('Decline')
                    .addClass('btn btn-danger')
                    .click( handlerMaker(applicationID,'DECLINED',[note]) );

            actionPanel.append(ignoreBtn).append(inviteBtn);
            break;
        case 'APPROVED':
        case 'DECLINED':
        case 'IGNORED':
            var BackToListBtn = $('<button>')
                    .text('Back to list')
                    .addClass('btn btn-primary')
                    .click( handlerMaker(applicationID,'NEW',[note]) );
            actionPanel.append(BackToListBtn);
            break
    }

    $('#decisionBox').append(actionPanel)
}

function loadTimeline(rows) {

    // Create and populate a data table.
    var data = new google.visualization.DataTable();
    data.addColumn('datetime', 'start');
    data.addColumn('datetime', 'end');
    data.addColumn('string', 'content');

    data.addRows(rows);

    // specify options
    var options = {
        "width":  "450px",
        "height": "200px",
        "style": "box",
        "showCurrentTime": true
    };

    // Instantiate our timeline object.
    var timeline = new links.Timeline(document.getElementById('timeline'));

    // Draw our timeline with the created data and options
    timeline.draw(data, options);
}

function getInvitatinos() {
}

function getAvatar(email) {
    var hash = CryptoJS.MD5( email.trim().toLowerCase() );
    return 'http://www.gravatar.com/avatar/' + hash;
}

function getTeamInfo(callback) {
    $.get('/api/team/members').done( function(res){
        $('#teamJobsPage').attr('href','/team/' +  res.teamID + '/jobs')
        $('#teamName').text( res.teamName );
        $('#teamAdmin').text( res.teamAdminEmail );

        if( res.isAdmin===true ) {
            $('#teamNameChange').show();
            $('#teamAdminChange').show();
        }

        teamMembers = res.members;

        $('#assignTo').html('')
        $('#teamMembers').html('');

        for( var i=0; i<res.members.length; i++ ){
            var avatarObj = $('<img>').addClass('teamMemberAvatar').attr( 'src', getAvatar(res.members[i].email) );
            var emailObj = $('<div>').addClass('teamMemberEmail').text(res.members[i].displayName);
            var roleObj = $('<div>').addClass('teamMemberRole').text( res.members[i].role );
            var makeAdminObj = $('<div>').attr('userID',res.members[i]._id)
                    .addClass('teamMemberMakeAdmin btn')
                    .hide()
                    .text( 'Make Admin')
                    .click( function() {
                        $.post('/api/team/admin', {newAdmin: $(this).attr('userID')}).done( function() {
                            $('.teamMemberMakeAdmin').hide();
                            refresh(true)
                        })
                    });
            var statusObj = $('<div>').addClass('teamMemberStatus').text( res.members[i].status );
            var memberObj = $('<div>').addClass('teamMember')
                    .append( avatarObj )
                    .append( emailObj )
                    .append( res.isAdmin ? makeAdminObj : '' )
                    .append( roleObj )
                    .append( statusObj );


            $('#teamMembers').append( memberObj );
        }

        callback();
    });

    $('#inviteToTeam').click( function() {
        $.post('/api/team/invite',{ email: $('#inviteEmail').val() })
                .done( function() {
                    alert('Invitation is sent.')
                    $('#inviteEmail').val('');
                    getTeamInfo();
                });
    });
}

function selectAssignedToFromList() {
    var selectedFormID = $('#formsList :selected').attr('id');

    forms.forEach( function(form) {
        if( form.formID == selectedFormID )
            $('#assignTo option[name=' + form.assignedTo + ']').attr('selected','selected');
    });
}

function getApplicationComments(appID) {
    $('#activitiesModal .comments').html('');

    $.get('/api/application/comments', {applicationID:appID}).done( function(res){
        res.comments.forEach( function(comment) {
            var commentObj = $('<div>').addClass('comment');
            commentObj.append( $('<div>').addClass('commentNote').text('Asked: ' +  comment.note) );
            commentObj.append( $('<div>').addClass('commentTime').text( 'At ' + (new Date(comment.askingTime)).toLocaleString()) );
            commentObj.append( $('<div>').addClass('commenter').text(comment.commenter.email + "'s comment:") );
            commentObj.append( $('<div>').addClass('commentBody').text(comment.comment) );
            commentObj.append( $('<div>').addClass('commentTime').text( 'At ' + (new Date(comment.commentTime)).toLocaleString()) );

            $('.comments').append( commentObj );
        });
    });
}

function getPositionComments(appID) {
    $('#positionComments .comments').html('');

    $.get('/api/form/comments', {formID:appID}).done( function(res){
        res.comments.forEach( function(comment) {
            var commentObj = $('<div>').addClass('comment');
            commentObj.append( $('<div>').addClass('commentNote').text('Asked: ' +  comment.note) );
            commentObj.append( $('<div>').addClass('commentTime').text( 'At ' + (new Date(comment.askingTime)).toLocaleString()) );
            commentObj.append( $('<div>').addClass('commenter').text(comment.commenter.email + "'s comment:") );
            commentObj.append( $('<div>').addClass('commentBody').text(comment.comment) );
            commentObj.append( $('<div>').addClass('commentTime').text( 'At ' + (new Date(comment.commentTime)).toLocaleString()) );

            $('#positionComments .comments').append( commentObj );
        });
    });
}

</script>

<div id="wrap">
<div class="container menu">
    <div class="row-fluid">
        <div class="span2 item" forContainer="analyticsContainer">Overview</div>
        <div class="span2 item" forContainer="teamContainer">Team</div>
        <div class="span2 item" forContainer="positionsContainer">Positions</div>
        <div class="span2 item" forContainer="applicationsContainer">Applications</div>
        <div class="span2 item" forContainer="commentsContainer">Requests<span id="comments_badge"></span></div>
        <div class="span2 item" forContainer="billingContainer">Billing</div>
    </div>
</div>

<div class="container analyticsContainer sectionContainer">
    <div class="row-fluid statisticsRow">
        <div class="span3 statBox">
            <div class="number" id="numForms"></div>
            <div class="text">Open Position</div>
        </div>

        <div class="span3 statBox">
            <div class="number" id="numApplications"></div>
            <div class="text">Applications</div>
        </div>

        <div class="span3 statBox">
            <div class="number" id="numNewApplications"></div>
            <div class="text">Unvisited Applications</div>
        </div>

        <div class="span3 statBox">
            <div class="number" id="numTodayApplications"></div>
            <div class="text">Today Applications</div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">

            <div id="full-clndr" class="clearfix">
                <script type="text/template" id="full-clndr-template">
                    <div class="clndr-grid">
                        <div class="days-of-the-week clearfix">
                            {% _.each(daysOfTheWeek, function(day) { %}
                            <div class="header-day">{{ day }}</div>
                            {% }); %}
                        </div>
                        <div class="days clearfix">
                            {% _.each(days, function(day) { %}
                            <div class="{{ day.classes }}" id="{{ day.id }}"><span class="day-number">{{ day.day }}</span></div>
                            {% }); %}
                        </div>
                    </div>
                    <div class="event-listing">
                        <div class="event-listing-title">EVENTS THIS MONTH</div>
                        {% _.each(eventsThisMonth, function(event) { %}
                        <div class="event-item">
                            <div class="event-item-name">{{ event.title }}</div>
                            <div class="event-item-location">{{ event.location }}</div>
                        </div>
                        {% }); %}
                    </div>
                </script>
            </div>
        </div>
    </div>
</div>

<div class="container teamContainer sectionContainer" hidden>
    <div class="row-fluid teamHeader">
        <div class="span4">
            <span id="teamNameTitle">Team:</span>
            <span id="teamName"></span>
            <span id="teamNameChange" hidden><a>Change</a></span>
        </div>
        <div class="span4">
            <span id="teamAdminTitle">Admin:</span>
            <span id="teamAdmin"></span>
            <span id="teamAdminChange" hidden><a>Change</a></span>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span12">
            <div id="teamMembers"></div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span12">
            <div class="teamInvitationPanel">
                <p>Send invatation to other members of your team to join:</p>
                <input type="email" id="inviteEmail" placeholder="yourfriend@yourorg.com">
                <button id="inviteToTeam" class="btn btn-warning">Invite</button>
            </div>
        </div>
    </div>

</div>

<div class="container positionsContainer sectionContainer" hidden>

    <div style="padding-bottom: 40px; font-size: 1.7em;">
        <a id="teamJobsPage">Jobs page</a>
    </div>

    <div class="row-fluid positionsHeaderRow">
        <div class="span3 colTitle">Name</div>
        <div class="span1 colStatus">Status</div>
        <div class="span3 colCreator">Creator</div>
        <div class="span3 colAssignedTo">Assigned To</div>
        <div class="span2 colOperations">Operatinos</div>
    </div>

</div>

<div class="container applicationsContainer sectionContainer" hidden>
    <div class="row-fluid tableRow">
        <div class="span12">
            <div id="applicationsTable"></div>
        </div>
    </div>
</div>

<div class="container commentsContainer sectionContainer" hidden>
    <div class="row-fluid tableRow">
        <div class="span12">
            <ul id="askedForCommentList"></ul>
        </div>
    </div>
</div>

<div class="container billingContainer sectionContainer" hidden>
    <div class="row-fluid tableRow">
        <div class="offset3 span2">
            <div class="plan">
                <div class="planTitle">1 Month</div>
                <div class="planDescription">
                    <ul>
                        <li></li>
                        <li></li>
                        <li></li>
                    </ul>
                </div>
                <div class="planButton">
                    <script src="https://www.paypalobjects.com/js/external/paypal-button.min.js?merchant=coybit@gmail.com"
                            data-button="subscribe"
                            data-name="booltin - 1 month subscribtion"
                            data-amount="15"
                            data-currency="USD"
                            data-recurrence="2"
                            data-period="M"
                            data-env="sandbox"></script>
                </div>
            </div>
        </div>

        <div class="span2">
            <div class="plan">
                <div class="planTitle">3 Month</div>
                <div class="planDescription">
                    <ul>
                        <li></li>
                        <li></li>
                        <li></li>
                    </ul>
                </div>
                <div class="planButton">
                    <script src="https://www.paypalobjects.com/js/external/paypal-button.min.js?merchant=coybit@gmail.com"
                            data-button="subscribe"
                            data-name="booltin - 1 month subscribtion"
                            data-amount="15"
                            data-currency="USD"
                            data-recurrence="2"
                            data-period="M"
                            data-env="sandbox"></script>
                </div>
            </div>
        </div>

        <div class="span2">
            <div class="plan">
                <div class="planTitle">12 Month</div>
                <div class="planDescription">
                    <ul>
                        <li></li>
                        <li></li>
                        <li></li>
                    </ul>
                </div>
                <div class="planButton">
                    <script src="https://www.paypalobjects.com/js/external/paypal-button.min.js?merchant=coybit@gmail.com"
                            data-button="subscribe"
                            data-name="booltin - 1 month subscribtion"
                            data-amount="15"
                            data-currency="USD"
                            data-recurrence="2"
                            data-period="M"
                            data-env="sandbox"></script>
                </div>
            </div>
        </div>
    </div>
</div>



</div>

<div id="activitiesModal">
    <div class="container-fluid">
        <div class="row-fluid" style="padding: 10px;background-color: #CEDFCE;margin: 10px 0;border: 2px solid #2B6F3B;border-radius: 4px;">
            <div class="span12">
                <select id="teamMembersForComment" style="margin: 0"></select>
                <button id="askForCommentOnApplication">Ask For Comment</button>
                <span id="askForCommentMessage" style="font-size: 1.2em;color: green;padding-left: 1em;"></span>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span4">
                <div class="contain" style="max-height: 400px; overflow-y: auto"></div>
                <div class="commentsHeader">Comments</div>
                <div class="comments"></div>
            </div>
            <div class="span8">
                <div id="timeline"></div>
                <div id="decisionBox"></div>
            </div>
        </div>
    </div>
</div>

<div id="applicationPreview">
</div>

<div id="positionComments">
    <div class="comments"></div>
</div>